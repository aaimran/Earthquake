install.packages("RcppCNPy")
library(RcppCNPy)
convert_npz_to_rds <- function(npz_file) {
sim_data <- npyLoad(npz_file, simplify = FALSE)
saveRDS(sim_data, file = sub("\\\.npz$", ".rds", npz_file))
files <- list.files("converted_rdata", pattern = "\\.npz$", full.names = TRUE)
lapply(files, convert_npz_to_rds)
convert_npz_to_rds <- function(npz_file) {
sim_data <- npyLoad(npz_file, simplify = FALSE)
saveRDS(sim_data, file = sub(".npz", ".rds", npz_file, fixed = TRUE))
}
files <- list.files("converted_rdata", pattern = "\\.npz$", full.names = TRUE)
lapply(files, convert_npz_to_rds)
library(RcppCNPy)
convert_npz_to_rds <- function(npz_file) {
sim_data <- npzLoad(npz_file)
saveRDS(sim_data, file = sub(".npz", ".rds", npz_file, fixed = TRUE))
}
files <- list.files("converted_rdata", pattern = "\\.npz$", full.names = TRUE)
lapply(files, convert_npz_to_rds)
# Install and load reticulate if not already installed
if (!require(reticulate)) install.packages("reticulate")
library(reticulate)
convert_npz_to_rds <- function(npz_file) {
np <- import("numpy")
# Load the .npz file with allow_pickle = TRUE if necessary
sim_data <- np$load(npz_file, allow_pickle = TRUE)
# Convert the numpy object to an R list
sim_list <- py_to_r(sim_data)
# Save as an .rds file (using fixed = TRUE to avoid escape issues)
saveRDS(sim_list, file = sub(".npz", ".rds", npz_file, fixed = TRUE))
}
# Get list of all .npz files in the converted_rdata folder
files <- list.files("converted_rdata", pattern = "\\.npz$", full.names = TRUE)
lapply(files, convert_npz_to_rds)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
